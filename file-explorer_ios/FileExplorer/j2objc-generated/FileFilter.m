//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/dmitrymalkovich/Documents/Developer/Github/hybrid-app-sample/file-explorer_android/app/src/main/java/engine/FileFilter.java
//

#include "FileFilter.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/File.h"

@interface EngineFileFilter () {
}
@end

BOOL EngineFileFilter_initialized = NO;

@implementation EngineFileFilter

IOSObjectArray * EngineFileFilter_imageFileExtensions_;

+ (jboolean)isImageWithJavaIoFile:(JavaIoFile *)file {
  return EngineFileFilter_isImageWithJavaIoFile_(file);
}

- (instancetype)init {
  return [super init];
}

+ (void)initialize {
  if (self == [EngineFileFilter class]) {
    JreStrongAssignAndConsume(&EngineFileFilter_imageFileExtensions_, nil, [IOSObjectArray newArrayWithObjects:(id[]){ @"jpg", @"png", @"gif", @"jpeg" } count:4 type:NSString_class_()]);
    J2OBJC_SET_INITIALIZED(EngineFileFilter)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "isImageWithJavaIoFile:", "isImage", "Z", 0x9, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "imageFileExtensions_", NULL, 0x1a, "[Ljava.lang.String;", &EngineFileFilter_imageFileExtensions_,  },
  };
  static const J2ObjcClassInfo _EngineFileFilter = { 1, "FileFilter", "engine", NULL, 0x1, 2, methods, 1, fields, 0, NULL};
  return &_EngineFileFilter;
}

@end

jboolean EngineFileFilter_isImageWithJavaIoFile_(JavaIoFile *file) {
  EngineFileFilter_init();
  if (file != nil) {
    {
      IOSObjectArray *a__ = EngineFileFilter_imageFileExtensions_;
      NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      NSString * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        NSString *extension = *b__++;
        if ([((NSString *) nil_chk([((NSString *) nil_chk([file getName])) lowercaseString])) hasSuffix:extension]) {
          return YES;
        }
      }
    }
  }
  return NO;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EngineFileFilter)
